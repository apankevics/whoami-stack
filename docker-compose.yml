version: '3.9'

services:
  # Service: Whoami (Webserver)
  # Tiny Go webserver that prints OS information and HTTP request to output.
  whoami:
    image: traefik/whoami:v1.11
    pull_policy: if_not_present
    container_name: whoami
    labels:
      access: "private"
      purpose: "webserver"
    env_file:
      - ./setup.env
    networks:
      - private_subnet
    expose:
      - 8080
    restart: always

  # Service: Nginx-Proxy (Reverse Proxy)
  # Acts as a public-facing entry point that proxies incoming HTTP/HTTPS traffic to whoami service.
  # It listens on ports 80 and 443 and terminates TLS.
  nginx-proxy:
    image: nginxproxy/nginx-proxy:1.7
    pull_policy: if_not_present
    container_name: nginx-proxy
    labels:
      access: "public"
      purpose: "reverse proxy"
    depends_on:
      - whoami
      - acme-sh
    env_file:
      - ./setup.env
    ports:
      - "80:80"
      - "443:443"
    networks:
      - public_subnet
      - private_subnet
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
    restart: always

  # Service: Acme-Sh (Certificate Issuer)
  # Automates the issuance and renewal of SSL/TLS certificates using ACME protocols.
  acme-sh:
    image: neilpang/acme.sh
    pull_policy: if_not_present
    container_name: acme.sh
    labels:
      access: "private"
      purpose: "certificates issuer"
    env_file:
      - ./setup.env
    networks:
      - private_subnet
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - acme:/acmecerts
      - ./scripts/acme-sh-entry.sh:/acme-sh-entry.sh:ro
    entrypoint: ["/bin/sh", "-c", "/acme-sh-entry.sh && crond -f"]
    restart: always

networks:
  # Public Subnet: Allows public-facing traffic to flow into the stack.
  public_subnet:
    driver: bridge
  # Private Subnet: Ensures communication within the stack without exposing services externally.
  private_subnet:
    driver: bridge

volumes:
  # Shared volume used to store SSL/TLS certificates generated by acme-sh and used by nginx-proxy.
  certs:
  # Ensures acme-sh can track issued certificates and handle automatic renewals.
  acme:
